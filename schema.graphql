
type FeeCollection @entity {
  id: ID!
  owner: Bytes! 
  recipient: Bytes!
  amount0: BigInt! 
  amount1: BigInt! 
  eventType: String! 
  blockNumber: BigInt!
  timestamp: BigInt!
}

type LastSwapPerBlock @entity {
  id: ID! 
  lastSwapId: String!
}


type Swap @entity(immutable: true) {
  id: ID!
  sender: Bytes! 
  recipient: Bytes! 
  amount0: BigInt! 
  amount1: BigInt! 
  sqrtPriceX96: BigInt! 
  liquidity: BigInt!
  tick: Int! 
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  lastSwapPerBlock: LastSwapPerBlock
  priceImpact: PriceImpact!
}

type PriceImpact @entity {
  id: ID!
  swapEvent: Swap!
  priceBefore: BigDecimal!
  priceAfter: BigDecimal!
  impact: BigDecimal!
}

type TradeSize @entity {
  id: ID!
  swap: Swap!
  sizeToken0: BigInt! 
  sizeToken1: BigInt!
}

type FlashLoan @entity {
  id: ID!
  sender: Bytes!
  recipient: Bytes!
  amount0: BigInt!
  amount1: BigInt!
  paid0: BigInt!
  paid1: BigInt!
  totalFlashLoanSize: BigInt! 
  numberOfLoans: BigInt!      
  blockNumber: BigInt!
  timestamp: BigInt!

}

type MarketVolatility @entity {
  id: ID! 
  totalVolatility: BigDecimal! 
  lastUpdated: BigInt! 
}

type SwapAmount @entity {
  id: ID!
  swap: Swap! 
  amountSize: BigInt!
}

type FlashLoanAmount @entity {
  id: ID!
  flashLoan: FlashLoan! 
  amountSize: BigInt!
}

type ObservationCardinality @entity {
  id: ID!
  oldCardinality: Int!
  newCardinality: Int!
  timestamp: BigInt!
}

type DailyStat @entity {
  id: ID!  
  totalVolume: BigDecimal!
  totalTransactions: BigInt!
  timestamp: BigInt!
}

type UserActivity @entity {
  id: ID!                    
  numberOfSwaps: BigInt!    
  totalVolume: BigDecimal!   
}

type RelayActivity @entity {
  id: ID!                    
  numberOfSwaps: BigInt!    
  totalVolume: BigDecimal!   
}